version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: ai-data-insight-db
    environment:
      POSTGRES_DB: ai_data_insight
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ai-network

  # Backend API
  backend:
    build:
      context: ./ai-data-insight
      dockerfile: Dockerfile
    container_name: ai-data-insight-backend
    environment:
      - DATABASE_URL=postgresql://postgres:postgres123@database:5432/ai_data_insight
      - PYTHONUNBUFFERED=1
    ports:
      - "8000:8000"
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./ai-data-insight/uploads:/app/uploads
      - ./ai-data-insight/models:/app/models
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - ai-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ai-data-insight-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - ai-network

volumes:
  postgres_data:

networks:
  ai-network:
    driver: bridge
